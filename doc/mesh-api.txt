xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
BlueZ D-Bus Mesh API description
********************************

Mesh Network Hierarchy
======================
Service		org.bluez.mesh
Interface	org.bluez.mesh.Network1
Object path	/org/bluez/mesh

Methods:
	void CreateNode(uint16 cid, uint16 pid, uint16 vid, array{byte}[16] uuid,
			dict element_models)

		This is the first method that an application has to call to
		create new unprovisioned node.

		cid
			Company identifier.

		pid
			Product identifier.

		vid
			Version identifier.

		uuid
			Is a 16-byte array that contains Device UUID. Must be correct UUID
			as standard.

		element_models
			A dictionary that contains model configuration
			with the following keys defined:

			uint16 el_idx
				Element index information.

			struct el_details
				Structure that contains element details, model description etc.

				uint16 location
					Element location info.

				array{uint16} sig_models
					List of SIG models idx's.

				array{uint16} vendor_models
					List of Vendor models idx's.

		PossibleErrors:
			org.bluez.mesh.Error.InvalidArguments
			org.bluez.mesh.Error.InvalidArguments: Incorrect device UUID format-
				UUID must be valid as standard.
			org.bluez.mesh.Error.InvalidArguments: Max element id 63 - Maximum
				count of elements must be 64 so maximum element idx is 63.
			org.bluez.mesh.Error.InvalidArguments: Wrong element indexation -
				Elements in dictionary must fullfill all indexes to maximal one.
			org.bluez.mesh.Error.InvalidArguments: Only element 0 can implement
				models {0x0000, 0x0002} - mesh profile mandatory model idx's
				(Config Model, Health Model) - have to stay on element 0 only.
			org.bluez.mesh.Error.AlreadyExists - If node with given UUID exists.

	void DeleteNode(array{byte}[16] uuid)

		This is the method that application uses to drop and delete active
		(previously created using CreateNode method) node.

		uuid
			Is a 16-byte array that contains Device UUID.

		PossibleErrors:
			org.bluez.mesh.Error.InvalidArguments - bad argument list.
			org.bluez.mesh.Error.InvalidArguments: Incorrect device UUID format-
				UUID must be valid as standard.
			org.bluez.mesh.Error.DoesNotExists - If node with given UUID does
				not exists.

Mesh Node Hierarchy
===================
Service		org.bluez.mesh
Interface	org.bluez.mesh.Node1
Object path	/org/bluez/mesh/node<uuid>
		where uuid is 16 byte hexadecimal number with given node UUID, organised
		with blocks (defined by UUID standard) separated by undescores.

Methods:
	void SendMessage(uint16 element_idx, uint16 destination, array{byte} opcode,
							array{byte} payload, variant key_variant)

		This method is used to send a message originated by a local model.

		element_idx
			Index of an element on destination node to which application wants
			to send a message.

		destination
			Contains the destination address. This destination must be a uint16
			to a unicast address, or a well known group address.

		opcode
			Opcode of access message that is being send in this method call.
			Must be maximum 3 bytes of length.

		payload
			Is an outgoing message to be encrypted by the meshd daemon and
			sent on.

		key_variant
			This parameter is DBus variant type argument that can be two
			different types - depending of use case needs: uint16 or array{byte}
			which are application key index in first option or directly given
			device key in second option.
			If application key index option used 0x7fff value is reserved to use
			when sending message from node to itself.

		Possible errors:
			org.bluez.mesh.Error.InvalidArguments - bad argument list.
			org.bluez.mesh.Error.DoesNotExists - If node with given UUID does
				not exists, internal daemon error not allowed in user use cases.
			org.bluez.mesh.Error.Failed - internal daemon error, can occur when
				method called on unprovisioned node.

Properties:
	uint16 Address [read-only]
		Node unicast (primary element) mesh address. If the value is 0, there
		could be two reasons why: unicast could be set to 0 or node is
		unprovisioned.

	array{byte} NetworkKey [read-only]
		Primary Network Key saved to the node during provisioning process. If
		this property gets empty array (list) it means that the node is
		unprovisioned.

	array{byte} DeviceKey [read-only]
		Device Key generated randomly for the node during provisioning process.
		If this property gets empty array (list) it means that the node is
		unprovisioned.

	array{array{byte}} ApplicationKeys [read-only]
		Application Keys stored by the node, added by Config Model, used to
		decrypt group messages. If this property gets empty array (list) of
		arrays (lists) it means that the node is unprovisioned.

	array{struct(byte element_idx,array{uint16} model_ids)} Elements [read-only]
		This property represents list of element idx's mapped on each element
		model (model id's) list.

	Possible errors:
		If there is nothing returned by property Get method - either value or
		empty value - it means internal daemon error occured - not allowed in
		user use cases.

Signals:
	MessageReceived(uint16 element, uint16 source, array{byte} opcode,
					array{byte} payload, uint16 key_index)

		This signal is being called each time mesh node receives message and get
		succeed with decrypting it (using stored application key, or own device
		key if message is directed to node itself).

		element
			Brings an information on which element for node itself the message
			has been sent.

		source
			Contains source unicast address of message sender.

		opcode
			Opcode of access message that has been receiced in this message.
			Is maximum 3 bytes of length.

		payload
			Is an incoming message that have been decrypted by the meshd daemon
			and received by node.

		key_index
			Contains an index of application key that has been used to decrypt
			received message.

Mesh Provisioning Hierarchy
===================
Service		org.bluez.mesh
Interface	org.bluez.mesh.Provisioning1
Object path	/org/bluez/mesh/node<uuid>
		where uuid is 16 byte hexadecimal number with given node UUID, organised
		with blocks (defined by UUID standard) separated by undescores.

Methods:
	void Provision(array{byte} net_key, uint16 addr, uint32 iv_index)

		This method is used to provision the node to use in given mesh net.
		After this method called, the random device key is generated for node.

		net_key
			Network key saved to node to start mesh on mesh net.

		addr
			Contains the unicast primary address of provisioned node. Must be
			correct device unicast primary address - see mesh spec for details.

		iv_index
			Iv index with which starts working.

		Possible errors:
			org.bluez.mesh.Error.InvalidArguments - bad argument list.
			org.bluez.mesh.Error.InvalidArguments: Wrong netkey - incorrect
				Network Key length or format.
			org.bluez.mesh.Error.DoesNotExists - If node with given UUID does
				not exists, internal daemon error not allowed in user use cases.
			org.bluez.mesh.Error.Failed - internal daemon error, can occur when
				method called on provisioned node.

	void Unprovision()

		This method is used to unprovision the node and clear its net resources.

		Possible errors:
			org.bluez.mesh.Error.DoesNotExists - If node with given UUID does
				not exists, internal daemon error not allowed in user use cases.
			org.bluez.mesh.Error.Failed - internal daemon error, can occur when
				method called on unprovisioned node.

	void StartAdvertising()

		This method is used to start the node to advertise with unprovisioned
		node beacon and wait for the provisioner to provision the node via
		PB-ADV.

		### NOT IMPLEMENTED YET ###

		Possible errors:
			org.bluez.mesh.Error.DoesNotExists - If node with given UUID does
				not exists, internal daemon error not allowed in user use cases.
			org.bluez.mesh.Error.Failed - internal daemon error, can occur when
				method called on provisioned node.

	void StartAdvertising()

		This method is used to stop the node to advertise with unprovisioned
		node beacon and skip provisioning via PB-ADV.

		### NOT IMPLEMENTED YET ###

		Possible errors:
			org.bluez.mesh.Error.DoesNotExists - If node with given UUID does
				not exists, internal daemon error not allowed in user use cases.
			org.bluez.mesh.Error.Failed - internal daemon error, can occur when
				method called on provisioned node.

Properties:
	boolean Provisioned [read-only]
		Property that represents the state of current node. If value is true -
		means that node provisioned, if false - node not provisioned.

	boolean Advertising [read-only]
		Contains the state of advertising with unprovisioned node beacon and
		waiting to be provisioned. If true - it means that node is advertising,
		if false - node is not advertising as unprovisioned node.

